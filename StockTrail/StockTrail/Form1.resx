<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>